#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.16.0.3)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    def Cube "Cube" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "Cube_3", "Cube_1", "Cube_2"]
        rel material:binding = </Root/Cube/DefaultMaterial>
        double size = 0.2
        float3 xformOp:scale = (2, 0.05, 2)
        float3 xformOp:translate = (0, 0.005, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            prepend token outputs:surface.connect = </Root/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def Cube "Cube_1" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Cube/Cube_1/DefaultMaterial>
            double size = 0.2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.5, 4, 0.05)
            float3 xformOp:translate = (0, 0.44583943, -0.09466469)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/Cube/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def Cube "Cube_2" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            reorder nameChildren = ["Cube_3", "DefaultMaterial"]
            rel material:binding = </Root/Cube/Cube_2/DefaultMaterial>
            double size = 0.2
            float2 ui:nodegraph:node:pos = (20, 20)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.5, 4, 0.05)
            float3 xformOp:translate = (-0.028056791, 0.44584027, 0.07493718)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/Cube/Cube_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def Cube "Cube_3" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Cube/Cube_3/DefaultMaterial>
            double size = 0.2
            float2 ui:nodegraph:node:pos = (20, 20)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.5, 3.9999998, 0.049999997)
            float3 xformOp:translate = (0.049759917, 0.4458402, 0.0070868284)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/Cube/Cube_3/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }
    }

    def Xform "DirectionalLight" (
        customData = {
            float3 rotationEulerHint = (-3.5980966, 0.48587462, 3.4165492)
        }
    )
    {
        quatf xformOp:orient = (0.20200521, -0.18348941, 0.92908025, 0.24967067)
        float3 xformOp:translate = (0.5471448, 0.7509422, -1.6267825)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "DirectionalLight"
        {
            float3 color = (1, 1, 1)
            token info:id = "RealityKit.DirectionalLight"
            float intensity = 10000

            def RealityKitStruct "Shadow"
            {
            }
        }
    }
}

